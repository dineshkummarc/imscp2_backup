#!/usr/bin/perl
#
# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010 - 2011 by internet Multi Server Control Panel
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# @category     iMSCP
# @package      iMSCP_Backend
# @subpackage   tools
# @copyright    2010 - 2011 by i-MSCP | http://i-mscp.net
# @author       Laurent Declercq <laurent.declercq@i-mscp.net>
# @version      SVN: $Id: imscp-genkv 4272 2011-01-10 16:31:45Z nuxwin $
# @link         http://i-mscp.net i-MSCP Home Site
# @license      http://www.gnu.org/licenses/gpl-2.0.html GPL v2

########################################################################################################################
# Script short description:
#
# This script is responsible to generate both key and initialization vector that are used for encrypt/decrypt some
# password such as the i-MSCP database password.
#

use Crypt::CBC;
use Data::Dumper;

$SIG{'INT'} = 'IGNORE';

# Generate printable random ASCII string
#
# Param: int $length string length to be generated
# Return: scalar Printable ASCII random string
sub randomString($) {
	my ($length) = @_;
	my $string = '';

	while(length $string < $length) {
		$pool = Crypt::CBC->random_bytes(100);
		foreach(unpack "C*", $pool) {
			next if $_ < 32 || $_ > 126;
			length $string < $length ? $string .= chr $_ : last;
		}
	}

	$string;
}

#
## Main program
#

die('Error: Missing argument for destination path!') if (!@ARGV);

my $destdir = $ARGV[0];

if(-d $destdir) {
	open(F, '>:utf8', "$destdir/imscp-kv") or die("Error: Can't open file '$destdir/imscp-kv' for writing: $!");
	print F Data::Dumper->Dump([randomString(32), randomString(8)], [qw(key iv)]);
	close F;
} else {
	die("Error: Destination path don't exists or is not a directory!");
}

0;
